# Aula 1 - O que é API e NodeJS 
    NodeJS é uma plataforma que utiliza da V8 ( engine do Chrome - que entende javascript) no backend
    
    API Rest - separa o backend do frontend.
    Benefícios: 
        - Mais flexibilidade no frontend
        - Trabalhar com uma única app para diversas plataformas
        
# Aula 2 - Instalando o NodeJS 
    No Windows instalar o NodeJS via chocolatey 

# Aula 3 - Criando estrutura
    npm init -y ( para iniciar um projeto)
    npm install express ( dependencia necessaria )
        - É um micro-framework que ajuda a lidar com rotas e views 
    configurar o servidor, arquivo principal da aplicacao
    executar node server.js para executar a aplicacao      

# Aula 4 - Criando primeira rota 
    app.get('/', function (req,res) => {
        res.send(msg);
    });

# Aula 5 - Utilizando Nodemon 
    Automaticamente reinicializa o servidor toda vez que ocorrer alteracao no codigo 
    instalar nodemon como uma dependencia de desenvolvimento
        - npm install -D nodemon
    utilizar o nodemon, criando novo script no package.js 
        - "dev": "nodemon server.js"
    executar o nodemon 
        - npm run dev 

# Aula 6 - Instalando MongoDB 
    instalar atraves do docker
    depois baixar a vm do MongoDB no docker
        - docker pull mongo 
    subir uma nova vm (container) para o docker, contendo o mongo 
        - docker run --name (comoChamarMaquina) -p (redirecionamentoDePorta) -d (qualImagemQueroUtilizar)
    para ver quais vms estao executando no docker 
        - docker ps 
    OPCIONAL. Instalar o Robo3T para verificar schemas do mongo 
    executar vm pelo docker 
        - docker start (imagemVM)
# Aula 7 - Conectando Database
    instalar mongoose - ORM para bancos No-SQL
        - npm install mongoose

# Aula 8 - Criando model de produto 
    criar primeiro model ( representa tabela no DB) ou uma estrutura schema 
    instalar biblioteca que faz require nos arquivos automaticamente 
        - npm install require-dir

# Aula 9 - Reestruturação de arquivos 
    separar rotas em outro arquivo 

# Aula 10 - Utilizando o Insomnia
    utilizado para testar rotas da aplicacao 
    configurar o base_url, que seria a url padrao da aplicacao. Ex.: localhost:porta/


# Aula 11 - Criação de registro
    sempre utilziar metodo post quando for criar algo na aplicacao
    new Request - index rota get passando a url da rota
    alterar o server.js para permitir que a aplicacao receba informacoes no formato json

# Aula 12 - CRUD 
    create, read, update and delete 

# Aula 13 - Paginação da lista 
    instalar mongoose-paginate 

# Aula 14 - Adicionando CORS 
    permitir que outros enderecos acessem a API
    instalar CORS
        - npm install cors